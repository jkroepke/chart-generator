{{- /* vim: set filetype=mustache: */ -}}
{{- $values := datasource "values" -}}
{{- $appName := datasource "app" | strings.TrimSpace -}}
{{- $app := (index $values.applications $appName) -}}
---
{{- `
apiVersion: v1
kind: Service
metadata:
  name: {{ template "` -}}{{- $values.chartName -}}{{- `.fullname" . }}-` -}}{{- $appName -}}{{- `
  labels:
    component: ` -}}{{- $appName -}}{{- `
{{ include "` -}}{{ $values.chartName }}{{- `.labels.standard" . | indent 4 }}
{{- if .Values.` -}}{{- $appName -}}{{- `.service.annotations }}
  annotations:
{{ toYaml .Values.` -}}{{- $appName -}}{{- `.service.annotations | indent 4 }}
{{- end }}
spec:
  type: {{ .Values.` -}}{{- $appName -}}{{- `.service.type }}` -}}
{{- range $key, $value := $app.ports -}}
{{- `
  ports:
  - port: {{ .Values.` -}}{{- $appName -}}{{- `.service.externalPort | default ` -}}{{- $value.port -}}{{- ` }}
{{- if (and (eq .Values.` -}}{{- $appName -}}{{- `.service.type "NodePort") (not (empty .Values.` -}}{{- $appName -}}{{- `.service.nodePort))) }}
    nodePort: {{ .Values.` -}}{{- $appName -}}{{- `.service.nodePort }}
{{- else }}
    targetPort: ` -}}{{- $key | strings.ToLower -}}{{- `
{{- end }}
    protocol: ` -}}{{- $value.protocol | default "TCP" -}}{{- `
    name: ` -}}{{- $key | strings.ToLower -}}
{{- end -}}{{- `
{{- if .Values.` -}}{{- $appName -}}{{- `.service.externalIPs }}
  externalIPs:
{{ toYaml .Values.` -}}{{- $appName -}}{{- `.service.externalIPs | indent 4 }}
{{- end }}
  selector:
{{ include "` -}}{{- $values.chartName -}}{{- `.matchLabels" . | indent 4 }}
    component: ` -}}{{- $appName -}}{{- `
` -}}